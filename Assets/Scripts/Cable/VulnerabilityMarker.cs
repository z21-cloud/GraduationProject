using UnityEngine;

public class VulnerabilityMarker : MonoBehaviour
{
    [Header("Effects")]
    [SerializeField] private ParticleSystem smokeParticles;
    [SerializeField] private ParticleSystem sparkParticles;

    [Header("Appearance")]
    [SerializeField] private Renderer markerRenderer;
    public Color normalColor = Color.yellow;
    public Color highlightedColor = Color.red;

    private bool isHighlighted = false;

    private void Start()
    {
        SetHighlight(false);
    }

    public void Highlight()
    {
        if (!isHighlighted)
        {
            SetHighlight(true);

            // Запускаем эффект дыма
            if (smokeParticles != null)
            {
                smokeParticles.Play();
            }

            // Воспроизводим звук
            AudioManager.Instance.PlaySound(
                AudioManager.Instance.vulnerabilityFoundSound
            );
        }
    }

    public void Remove()
    {
        SetHighlight(false);

        // Запускаем эффект искр
        if (sparkParticles != null)
        {
            // Открепляем частицы от объекта
            sparkParticles.transform.SetParent(null);
            sparkParticles.Play();

            // Уничтожаем через время жизни частиц
            Destroy(sparkParticles.gameObject, sparkParticles.main.duration);
        }

        // Воспроизводим звук уничтожения
        AudioManager.Instance.PlaySound(
            AudioManager.Instance.vulnerabilityDestroyedSound
        );

        // Уничтожаем объект
        Destroy(gameObject);
    }

    private void SetHighlight(bool highlight)
    {
        isHighlighted = highlight;

        if (markerRenderer != null)
        {
            markerRenderer.material.color = highlight ? highlightedColor : normalColor;

            if (highlight)
            {
                // Включаем свечение
                markerRenderer.material.EnableKeyword("_EMISSION");
                markerRenderer.material.SetColor(
                    "_EmissionColor",
                    highlightedColor * 0.8f
                );

                // Увеличиваем интенсивность свечения
                markerRenderer.material.globalIlluminationFlags =
                    MaterialGlobalIlluminationFlags.RealtimeEmissive;
            }
            else
            {
                // Выключаем свечение
                markerRenderer.material.DisableKeyword("_EMISSION");
            }
        }
    }
}